Answers : 

1. d)public static final void main(String args[])
Explanation : A Java program expects a static main method as it is called when the class is compiled without the creation of an object. So we cannot create a main function without the static keyword. Also, the when compiler starts compiling the program, it looks for a main method as the entry point, and other methods cannot be used as the entry point.

2. a) The diagram demonstrates platform independence in Java.
Explanation : The diagram demonstrates the various features of inheritance in Java. Platform independence is a feature of the compiler and has nothing to do with inheritance.

3. c) .class
Explanation : Java bytecode compiled files have an exntension of .class. This happens to implement modularity. The compiler separates each class in a Java file into separate .class files so that each can be called and used separately.

5. a) Objects are grouped as procedures, separate from the data they act on.
Explanation : Option A is incorrect as an object-oriented project tends to group data and the actions related to that data into a single object. This promotes security of data.

6. d) Local Variables
Explanation : Since Interface Variables need to be public to be overridden and Class and Instance vairables are accessible to multiple variables of a class.

7. b) Java.lang
Explanation : This package is imported by default as it contains support for most processes including Class and Object manipulation

8. c) # Add configuration value
Explanation : This is invalid as # is not a valid comment line character in Java.

9. d) It may define at most one public class.
Explanation : This is because the compiler starts executing from the public class. If there are more than one public classes, the compiler would throw an error as it cannot decide which one is the main class.

10. b)2,2,1
Explanation : Since the main method is not a static method, it can access both class (success and weight) and instance variables(ageMonths and ageDays).

11. b)Unused import statements can be removed from the class without causing a class to become unable to be compiled.
Explanation : This is true because the import is already unused so if it is removed it cannot effect the execution of a program

12. a)It does not compile.
Explanation : Since the main method is a static method, it does not have access to the non-static variables. So, when we try to access the variable birds, it is a compilation error.

13. a)I only
Explanation :java command runs both .class and .java files. javac command is used to compile .java files into .class files and then java command runs .class files. But, since Java 11, both can be done using only the java command.

(For note : https://stackoverflow.com/a/58086598/16134700)

14. d)int facilityNumber
Explanation : We cannot decalre a variable outside of a class declaration in Java.

15. c)Packages allow you to limit access to classes, methods, or data from classes outside the package.
Explanation : We can define protected classes that maybe be denied access from classes outside the package.

16. b)javac Manager.java
java Manager
Explanation : This is the correct option as for the compilation of a .java file we need the whole file directory or path. But for the execution of a class file, we just need the name of the class.

17. d) Encapsulation
Explanation : In encapsulation, the variables of a class will be hidden from other classes, and can be accessed only through the methods of their current class.

18. d) It does not compile
Explanation : It fails to compile as variables in Java have a block scope. As, height is defined inside the if block, and we try to access it outside the if block, the compiler throws an error and does not compile.

19. a) It can be run on any computer with a compatible JVM.
Explanation : bytecode files are files that need a JVM to run it. It does not need the source Java file. This makes the Bytecode file (.class) platform independent and can be run on any system as long as there is a JVM on that machine.

20. d) A semicolon (;)
Explanation : This is basic feature of a Java program. New line, colon  or tab characters are not valid line terminators in Java.

21. Answer = 31
Explanation : The instance tolls created in the main method is able to access the private static variable yesterday. This is because the main method is inside the Toll class and private variables can be accessed in the same class. And also, though we are making a static reference from the instance object, it does not give an error. It is more of a warning, but not an error.

22. c)void errors() {}
Explanation : This line does not give a compilation error as it is a valid method declaration. Line 1 does not have the class keyword. Line 2 has both double and int in the variable definition which is invalid. And in Line 4, the position of private keyword in in valid.

23. d)Platform independence
Explanation : Java compiler compiles the java file into a .class file which is bytecode file, which can be executed on any machine. This makes java programs platform independence.

24. a)It prevents Java bytecode from being easily decoded/decompiled
Explanation : The task of JVM is to convert to bytecode file to plain machine language. And the above statement is the opposite of this. Also, bytecode is very easily decodable.

25. b)Class variables
Explanation : This is because Class variables are static variables that can be accessed from any where inside the class. Local variables are accessible inside only a function and instance variables can only be accessed by certain instances. Package variables are not a thing.

26. c) television.actor.Package
Explanation : As the import statement "television.actor.*" specifies that all the classes in the television/actor location will be available. Option A is incorrect becuase is accesses a subclass and option B is incorrect because disctributors is wrong subdirectory.

27. d) package statement, import statement, class declaration
Explanation : Package statement must be first statement in the program even before the import statement.

28. d)three
Explanation : This is because java.lang is automatically imported, so we can remove the 1st and 3rd import statements. We can also remove the last import statement as "import start.*" imports all the classes in the stars package. So, we do not need to import the blackhole class explicitly

29. c)java forest.Deer red deer white-tailed deer
Explanation : This is because the args is a string array with elements separated by space. So, "white-tailer deer" is a single element. This makes options A,B and D wrong  

30. b)javac command compiles .java file into .class file
Explanation : javac command is the execution of the java compiler. A compiler is used to convert high level language code into the closest to machine language code(which in this case is bytecode stored in the .class file)

31. b)java allows method overloading
Explanation : In java, we have a concept of method overloading in which we can use methods with the same name and almost same usage for various tasks depending on the different types of input. This feature is a very important one in real world simulation.

32. d)package,class,long
Explanation : Package is the best choice as we are not specifying any subclass or methods. Class is the only choice as it's method is private and we cannot define a private method inside an Interface as interfaces are used to implement public methods that can be reused when necessary. Lastly, we use long as the only other option is void and we can se the method returns a value which is 10.

33. a)2 5
Explanation : The value of start is 2 and irrespective of the value of x passed in the constructor, the value of end is always 4. So, the value of end-start = 2 and distance is 5.

34. d)Developers minimize duplicate code in new classes by sharing a code in common parent class
Explanation : The process of inheritance promotes code reusability by giving the child classes the ability to use the common code in the parent class. This helps in shorter and thus cleaner code.

35. a)/////////Walk my dog
Explanation : The comment line literal is "//". So any number of "/" after this will be a part of the comment. So it is valid.

36. b)public static void main(String arguments)
Explanation : This is invalid as the command line arguments variable must be a String array and not a single string value.

37. 